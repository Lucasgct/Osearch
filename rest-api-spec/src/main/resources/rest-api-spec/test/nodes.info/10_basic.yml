setup:
  - skip:
      features: [arbitrary_key]
---
"node_info test":
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - is_true: nodes
  - is_true: cluster_name

---
"node_info role test":
  - skip:
      version: " - 7.7.99 , 2.0.0 -"
      reason: "node roles were not sorted before 7.8.0"

  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - is_true: nodes.$node_id.roles
  # the roles output is sorted
  - match: { nodes.$node_id.roles.0: "data" }
  - match: { nodes.$node_id.roles.1: "ingest" }
  - match: { nodes.$node_id.roles.2: "master" }
  - match: { nodes.$node_id.roles.3: "remote_cluster_client" }
    
---
"node_info role test with cluster_manager":
  - skip:
      reason: "node role cluster_manager is added in 2.0.0"
      features: node_selector

  - do:
      nodes.info: {}
      node_selector:
        version: "2.0.0 - " # Run the test when a node got upgraded from <2.0 to 2.x version during mixedClusterTest.

  - set:
      nodes._arbitrary_key_: node_id

  - is_true: nodes.$node_id.roles
  # the roles output is sorted
  - match: { nodes.$node_id.roles.0: "cluster_manager" }
  - match: { nodes.$node_id.roles.1: "data" }
  - match: { nodes.$node_id.roles.2: "ingest" }
  - match: { nodes.$node_id.roles.3: "remote_cluster_client" }

