/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

apply plugin: 'opensearch.build'
apply plugin: 'opensearch.publish'


dependencies {
  // Needed to import SpecialPermission
  compileOnly(project(":server"))

  api 'org.apache.shiro:shiro-core:1.9.1'
  // Needed for shiro
  implementation "org.slf4j:slf4j-api:${versions.slf4j}"

  implementation 'commons-beanutils:commons-beanutils:1.9.4'
  implementation 'commons-logging:commons-logging:1.2'

  // logging
  implementation "org.apache.logging.log4j:log4j-api:${versions.log4j}"

  testImplementation(project(":test:framework")) {
    exclude group: 'org.opensearch.sandbox', module: 'opensearch-authn'
  }
}

tasks.named('forbiddenApisMain').configure {
  replaceSignatureFiles 'jdk-signatures'
}

tasks.named("dependencyLicenses").configure {
  mapping from: /log4j-.*/, to: 'log4j'
}

thirdPartyAudit.ignoreMissingClasses(
  'javax.servlet.ServletContextEvent',
  'javax.servlet.ServletContextListener',
  'org.apache.avalon.framework.logger.Logger',
  'org.apache.commons.collections.Closure',
  'org.apache.commons.collections.FastHashMap',
  'org.apache.commons.collections.Predicate',
  'org.apache.commons.collections.Transformer',
  'org.apache.commons.collections.comparators.ComparableComparator',
  'org.apache.commons.collections.keyvalue.AbstractMapEntry',
  'org.apache.commons.configuration2.interpol.ConfigurationInterpolator',
  'org.apache.log.Hierarchy',
  'org.apache.log.Logger',
  'org.apache.log4j.Level',
  'org.apache.log4j.Logger',
  'org.apache.log4j.Priority',
  'org.osgi.framework.Bundle',
  'org.osgi.framework.BundleActivator',
  'org.osgi.framework.BundleContext',
  'org.osgi.framework.BundleEvent',
  'org.osgi.framework.SynchronousBundleListener',
  'org.osgi.framework.wiring.BundleWire',
  'org.osgi.framework.wiring.BundleWiring',
  'org.slf4j.impl.StaticLoggerBinder',
  'org.slf4j.impl.StaticMDCBinder',
  'org.slf4j.impl.StaticMarkerBinder',
)

tasks.register("integTest", Test) {
  include '**/*IT.class'
}
