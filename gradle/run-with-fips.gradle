import org.opensearch.gradle.testclusters.RunTask

apply plugin: 'opensearch.testclusters'
apply plugin: 'java'

def numNodes = findProperty('numNodes') as Integer ?: 1
def numZones = findProperty('numZones') as Integer ?: 1

def fipsResourcesDir = new File(project.projectDir, 'buildSrc/build-bootstrap/resources/main')
def fipsSecurity
def fipsPolicy
def fipsTrustStore
def bcFips
def bcTlsFips

fipsSecurity = new File(fipsResourcesDir, "fips_java_bcjsse_11.security")
fipsPolicy = new File(fipsResourcesDir, "fips_java_bcjsse_11.policy")
fipsTrustStore = new File(fipsResourcesDir, 'cacerts.bcfks')

bcFips = dependencies.create('org.bouncycastle:bc-fips:1.0.2.4')
bcTlsFips = dependencies.create('org.bouncycastle:bctls-fips:1.0.19')

pluginManager.withPlugin('java') {
  project.afterEvaluate {
    def extraFipsJars = configurations.detachedConfiguration(bcFips, bcTlsFips)
    extraFipsJars.resolve().forEach { el ->
      {
        println el.path
      }
    }
  }
}

testClusters {
  runTask {
    setSecure true
    testDistribution = 'archive'

    extraConfigFile "fips_java.security", fipsSecurity
    extraConfigFile "fips_java.policy", fipsPolicy
    extraConfigFile "cacerts.bcfks", fipsTrustStore
    systemProperty 'java.security.properties', '=${OPENSEARCH_PATH_CONF}/fips_java.security'
    systemProperty 'java.security.policy', '=${OPENSEARCH_PATH_CONF}/fips_java.policy'
    systemProperty 'javax.net.ssl.trustStore', '/home/iwan/workspace/OpenSearch/certs/centST9/truststore.bks'
    systemProperty 'javax.net.ssl.trustStorePassword', 'password' // password must be at least 112 bits
    systemProperty 'javax.net.ssl.trustStoreType', 'BCFKS'
//    systemProperty 'javax.net.ssl.keyStorePassword', 'rzg9RxrMBDU3jV^^$vNB' // password must be at least 112 bits
//    systemProperty 'javax.net.ssl.keyStoreType', 'BCFKS'

    if (numZones > 1) numberOfZones = numZones
    if (numNodes > 1) numberOfNodes = numNodes
    if (findProperty("installedPlugins")) {
      installedPlugins = Eval.me(installedPlugins)
      for (String p : installedPlugins) {
        plugin('plugins:'.concat(p))
      }
    }
  }
}

tasks.register("runWithFips", RunTask) {
  useCluster testClusters.runTask;
  description = 'Runs opensearch in the foreground'
  group = 'Verification'

  impliesSubProjects = true
}
