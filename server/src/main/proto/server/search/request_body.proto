/*
  OpenSearch _core API

  OpenSearch _core API

  The version of the OpenAPI document: 1.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package org.opensearch.search.proto;
option java_multiple_files = true;


import "server/search/query_container.proto";
import "server/search/search_request_highlight.proto";
import "server/search/search_request_field_and_format.proto";
import "server/search/search_request_script_fields.proto";
import "server/search/search_request_source.proto";
import "server/search/search_request_knn_inner.proto";
import "server/search/search_request_pit.proto";
import "server/search/search_request_rank.proto";
import "server/search/search_request_rescore.proto";
import "server/search/search_request_runtime_mappings_value.proto";
import "server/search/search_request_slice.proto";
import "server/search/search_request_suggest.proto";
import "server/search/search_request_sort.proto";
import "server/common/common.proto";
import "google/protobuf/wrappers.proto";


message RequestBody {

  // If true, returns detailed information about score computation as part of a hit.
  bool explain = 1;

  // Starting document offset. Needs to be non-negative. By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters. To page through more hits, use the `search_after` parameter.
  int32 from = 2;

  SearchRequestHighlight highlight = 3;

  oneof track_total_hits{
    bool boolean_track_total_hits = 4;
    float number_track_total_hits = 6;
  }

  // Boosts the _score of documents from specified indices.
  repeated IndicesBoosts indices_boost = 7;

  // Array of wildcard (`*`) patterns. The request returns doc values for field names matching these patterns in the `hits.fields` property of the response.
  repeated FieldAndFormat docvalue_fields = 8;

  // Defines the approximate kNN search to run.
  repeated SearchRequestKnnInner knn = 9;

  // TODO: unclear RankContainer definition in specs
  SearchRequestRank rank = 10;

  // Minimum `_score` for matching documents. Documents with a lower `_score` are not included in the search results.
  int32 min_score = 11;

  QueryContainer post_filter = 12;

  // Set to `true` to return detailed timing information about the execution of individual components in a search request. NOTE: This is a debugging tool and adds significant overhead to search execution.
  bool profile = 13;

  // The DSL query to use in the request.
  QueryContainer query = 14;

  // Can be used to improve precision by reordering just the top (for example 100 - 500) documents returned by the `query` and `post_filter` phases.
  repeated SearchRequestRescore rescore = 15;

  // Retrieve a script evaluation (based on different fields) for each hit.
  // TODO: not supported
  map<string, SearchRequestScriptFields> script_fields = 16;

  repeated org.opensearch.common.proto.MultiTypeValue search_after = 17;

  // The number of hits to return. By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters. To page through more hits, use the `search_after` parameter.
  int32 size = 18;

  SearchRequestSlice slice = 19;

  repeated SearchRequestSort sort = 20;

  // Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered.
  SearchRequestSource _source = 21;

  // Array of wildcard (`*`) patterns. The request returns values for field names matching these patterns in the `hits.fields` property of the response.
  repeated FieldAndFormat fields = 22;

  SearchRequestSuggest suggest = 23;

  // Maximum number of documents to collect for each shard. If a query reaches this limit, OpenSearch terminates the query early. OpenSearch collects documents before sorting. Use with caution. OpenSearch applies this parameter to each shard handling the request. When possible, let OpenSearch perform early termination automatically. Avoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers. If set to `0` (default), the query does not terminate early.
  int32 terminate_after = 24;

  // Specifies the period of time to wait for a response from each shard. If no response is received before the timeout expires, the request fails and returns an error. Defaults to no timeout.
  string timeout = 25;

  // If true, calculate and return document scores, even if the scores are not used for sorting.
  bool track_scores = 26;

  // If true, returns document version as part of a hit.
  bool version = 27;

  // If `true`, returns sequence number and primary term of the last modification of each hit.
  bool seq_no_primary_term = 28;

  repeated string stored_fields = 29;

  SearchRequestPit pit = 30;

  map<string, SearchRequestRuntimeMappingsValue> runtime_mappings = 31;

  // Stats groups to associate with the search. Each group maintains a statistics aggregation for its associated searches. You can retrieve these stats using the indices stats API.
  repeated string stats = 32;

}

message IndicesBoosts{
  map<string, .google.protobuf.FloatValue> indices_boosts = 1;
}
